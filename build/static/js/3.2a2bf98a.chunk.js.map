{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","onAddedComment","useHttp","addComment","sendRequest","status","error","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/3.2a2bf98a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1p5hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1UZkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__a0sRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Pi9N\",\"loading\":\"NewCommentForm_loading__3Neb0\",\"control\":\"NewCommentForm_control__gKrRk\",\"actions\":\"NewCommentForm_actions__8BOhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3eON8\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { onAddedComment } = props;\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({commentData: {text: enteredText}, quoteId: props.quoteId});\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [quoteId , sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n\n  ){\n    comments=<p className='centered'>No Comments were added yet.</p>\n  }\n    return (\n      <section className={classes.comments}>\n        <h2>User Comments</h2>\n        {!isAddingComment && (\n          <button className=\"btn\" onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n        )}\n        {isAddingComment && (\n          <NewCommentForm\n            quoteId={quoteId}\n            onAddedComment={addedCommentHandler}\n          />\n        )}\n        {comments}\n      </section>\n    );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getSingleQuote } from \"../components/lib/api\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n// const Dummy_Quotes = [\r\n//   { id: \"q1\", author: \"Natia\", text: \"Dont throw pearls to pigs\" },\r\n//   { id: \"q2\", author: \"Nini\", text: \"Work hard, party harder\" },\r\n//   { id: \"q3\", author: \"Levan\", text: \"I'm a lone wolf\" },\r\n// ];\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const { quoteId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>   {/*only comments is enough in route 6 */}\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}
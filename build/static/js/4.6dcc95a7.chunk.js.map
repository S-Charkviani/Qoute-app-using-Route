{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/UI/Card.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,qBCArID,EAAOC,QAAU,CAAC,KAAO,mB,4GCKVC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,UAC7C,E,QCwDcC,EArDG,SAACL,GACjB,MAAiCM,qBAAjC,mBAAMC,EAAN,KAAkBC,EAAlB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,SAACC,GAAD,MACnC,iCADmC,IAErC,cAAC,EAAD,UACE,uBAAMC,QAVe,WAC3BP,GAAc,EAEX,EAOsCP,UAAWC,IAAQc,KAAMC,SAxBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAeG,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAEtC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAEpC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QA7Bc,WAC5B7B,GAAc,EACf,EA2BiDP,UAAU,MAApD,gCAMT,E,gBClCcqC,UAlBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACI,cAATH,GACDC,EAAQG,KAAK,UAEhB,GAAC,CAACJ,EAAQC,IAOX,OAAO,cAAC,EAAD,CAAWhB,UAAoB,YAATe,EAAoBlB,WALzB,SAACuB,GACvBN,EAAYM,GACZJ,EAAQG,KAAK,UACd,GAGF,C","file":"static/js/4.6dcc95a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2Buk_\",\"loading\":\"QuoteForm_loading__21rFN\",\"control\":\"QuoteForm_control__1sEb_\",\"actions\":\"QuoteForm_actions__142YG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__17-Qc\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\n\nimport classes from './QuoteForm.module.css';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { Prompt } from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const[isEntering, setIsEntering]=useState();\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishedEnteringHandler=()=>{\n    setIsEntering(false);\n  }\n  const formFocusedHandler=()=>{\nsetIsEntering(true);\n\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>\n      \"Are you sure you want to leave?\"} />\n    <Card>\n      <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishedEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { addQuote } from \"../components/lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    if(status==='completed'){\r\n      history.push('/quotes');\r\n    }\r\n  },[status, history])\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n    history.push(\"/quotes\");\r\n  };\r\n\r\n  return <QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}